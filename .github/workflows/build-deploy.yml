name: build-deploy

on:
    push:
        branches: [ 'release/stg', 'release/prod' ]

jobs:
    set-env:
      runs-on: ubuntu-latest
      outputs:
        environment: ${{ steps.setEnv.outputs.environment }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Set environment
          id: setEnv
          run: |
            BRANCH_NAME=${GITHUB_REF#refs/*/}
            echo "BRANCH_NAME=$BRANCH_NAME"
            if [[ "$BRANCH_NAME" == "release/stg" ]]; then
              echo "environment=staging" >> $GITHUB_OUTPUT
            elif [[ "$BRANCH_NAME" == "release/prod" ]]; then
              echo "environment=production" >> $GITHUB_OUTPUT
            fi
    build-and-push:
      needs: set-env
      runs-on: ubuntu-latest
      environment: ${{ needs.set-env.outputs.environment }}
      permissions:
        contents: 'read'
        id-token: 'write'

      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - id: 'auth'
          name: 'Auth to GCP'
          uses: 'google-github-actions/auth@v1'
          with:
            token_format: 'access_token'
            workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
            service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
            
        - name: Authenticate to Artifact Registry
          uses: 'docker/login-action@v2'
          with:
            registry: '${{ vars.GCP_LOCATION }}-docker.pkg.dev'
            username: 'oauth2accesstoken'
            password: '${{ steps.auth.outputs.access_token }}'

        - name: Build Docker image
          run: |
            docker build -t ${{ vars.GCP_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend/touchcom:latest .
        
        - name: Push Docker image
          run: |
            docker push ${{ vars.GCP_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend/touchcom:latest
    deploy:
      needs: [build-and-push, set-env]
      runs-on: ubuntu-latest
      environment: ${{ needs.set-env.outputs.environment }}
      permissions:
        contents: 'read'
        id-token: 'write'

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - id: 'auth'
          name: 'Auth to GCP'
          uses: 'google-github-actions/auth@v1'
          with:
            workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
            service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

        - id: deploy
          uses: 'google-github-actions/deploy-cloudrun@v1'
          with:
            service: ${{ vars.GCP_BACKEND_SERVICE_NAME}}
            image: ${{ vars.GCP_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/backend/touchcom:latest
            region: ${{ vars.GCP_LOCATION }}
            project_id: ${{ secrets.GCP_PROJECT_ID }}  